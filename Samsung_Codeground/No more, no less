#include <iostream>
#include <map>
using namespace std;

typedef long long LL;

LL input[200001];
LL sum[200001];
map<LL, LL> Map;

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int T;
	cin >> T;

	for (int tc = 1; tc <= T; tc++) {
		Map.clear();
		int N;
		LL K;
		cin >> N >> K;

		for (int n = 1; n <= N; n++)
			cin >> input[n];

		LL answer = 0;

		Map.insert({ 0, 1 });

		for (int n = 1; n <= N; n++) {
			sum[n] = sum[n - 1] + input[n];

			if (Map.find(sum[n] - K) != Map.end())
				answer += Map.find(sum[n] - K)->second;

			if (Map.find(sum[n]) != Map.end()) {
				LL cnt = Map.find(sum[n])->second;

				Map.erase(sum[n]);
				Map.insert({ sum[n], cnt + 1 });
			}
			else
				Map.insert({ sum[n], 1 });
		}

		cout << "Case #" << tc << "\n";
		cout << answer << "\n";
	}

	return 0;
}
