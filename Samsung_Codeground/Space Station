#include <iostream>
#include <vector>
#include <cstring>
#include <algorithm>
#include <set>
#include <queue>
using namespace std;

vector<set<int>> vs[200001];
set<int> s[200001];
queue<int> q;

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int T;
	cin >> T;

	for (int tc = 1; tc <= T; tc++) {
		while (!q.empty())
			q.pop();
		int N, M;
		cin >> N >> M;

		for (int m = 0; m < M; m++) {
			int a, b;
			cin >> a >> b;

			s[a].insert(b);
			s[b].insert(a);
		}

		for (int i = 1; i <= N; i++)
			if (s[i].size() == 2)
				q.push(i);

		while (!q.empty()) {
			int cur = q.front();
			q.pop();

			if (s[cur].size() != 2)
				continue;

			int first = *s[cur].begin();
			int second = *s[cur].rbegin();

			if (s[first].count(second) && s[second].count(first)) {
				s[cur].clear();
				s[first].erase(cur);
				s[second].erase(cur);

				if (s[first].size() == 2)
					q.push(first);

				if (s[second].size() == 2)
					q.push(second);
			}
		}

		int answer = 0;

		for (int i = 1; i <= N; i++) {
			if (s[i].size() > 0)
				answer++;

			s[i].clear();
		}

		cout << "Case #" << tc << "\n";
		cout << answer << "\n";
	}

	return 0;
}
