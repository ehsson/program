#include <stdio.h>
#include <math.h>

int Answer[5];

long long GCD(long long a, long long b)
{
    long long temp;

    while (1)
    {
        temp = a % b;

        if (temp == 0)
            return b;

        a = b;
        b = temp;
    }
}

void dfs(int idx, int totalCnt, int totalSum)
{
    int cnt = totalSum / idx;

    while (1)
    {
        int tempCnt = totalCnt - cnt;
        int tempSum = totalSum - idx * cnt;

        if (tempSum - tempCnt > 0)
        {
            totalCnt = tempCnt;
            totalSum = tempSum;
            Answer[idx - 1] = cnt;
            dfs(idx - 1, totalCnt, totalSum);
            return;
        }
        else if (tempSum - tempCnt == 0)
        {
            Answer[idx - 1] = cnt;
            Answer[0] = tempCnt;
            return;
        }

        cnt--;
    }
}

int main(void)
{
    int T;
    double avg;
    FILE* pf;
    freopen_s(&pf, "input.txt", "r", stdin);

    scanf_s("%d", &T);

    for (int t = 1; t <= T; t++)
    {
        scanf_s("%lf", &avg);

        for (int i = 0; i < 5; ++i)
            Answer[i] = 0;

        int totalCnt = 1;
        int totalSum = 0;
        long long b = 10e9;
        long long a = (long long int)(avg * b);
        long long int gcd = GCD(a, b);

        totalSum = a / gcd;
        totalCnt = b / gcd;

        dfs(5, totalCnt, totalSum);


        printf("#testcase%d\n%d %d %d %d %d\n", t, Answer[0], Answer[1], Answer[2], Answer[3], Answer[4]);
    }

    return 0;
}

//test case

3
1.1
4.5
3.20
