#include <stdio.h>
#include <string.h>

int arr[6] = { 0 };

long long get_int(double P)
{
	int mul = 10;
	long long num;

	while (P != (long long)P)
		P *= mul;

	if (!((int)P % 2) && P != 2)
		P /= 2;
	else if (!((long long)P % 5) && P != 5)
		P /= 5;

	num = P;

	return num;
}

void DFS(int sum, int num, int cnt)
{
	if (!num)
		return;

	int a = (int)(sum / num);

	while (1)
	{
		int tempsum = sum - num * a;
		int tempcnt = cnt - a;

		if (tempsum > tempcnt)
		{
			arr[num] = a;
			DFS(tempsum, num - 1, tempcnt);
			return;
		}
		else if (tempsum == tempcnt)
		{
			arr[num] = a;
			arr[1] = tempcnt;
			return;
		}

		a--;
	}
}

int main(void)
{
	int T;

	scanf("%d", &T);

	for (int t = 1; t <= T; t++)
	{
		double P;
		int cnt;
		int sum;
		memset(arr, 0, sizeof(int) * 6);

		scanf("%lf", &P);

		sum = get_int(P);
		cnt = sum / P;

		DFS(sum, 5, cnt);

		printf("#testcase%d\n", t);

		printf("%d %d %d %d %d", arr[1], arr[2], arr[3], arr[4], arr[5]);

		printf("\n");
	}

	return 0;
}

//test case

4
5.0
1.1
4.5
3.20
