#include <stdio.h>

int A[200000] = { 0 };
int B[200000] = { 0 };

void QuickSort(int arr[], int start, int end)
{
	if (start >= end)
		return;

	int pivot = start;
	int low = start + 1;
	int high = end;
	int temp;

	while (low <= high)
	{
		while (arr[pivot] >= arr[low] && low <= end)
			low++;

		while (arr[pivot] < arr[high])
			high--;

		if (low < high)
		{
			temp = arr[low];
			arr[low] = arr[high];
			arr[high] = temp;
		}
	}

	temp = arr[pivot];
	arr[pivot] = arr[high];
	arr[high] = temp;

	QuickSort(arr, start, high - 1);
	QuickSort(arr, high + 1, end);
}

int main(void)
{
	int T, N, K, max, sum;
	FILE* pf;

	freopen(&pf, "input.txt", "r", stdin);

	scanf("%d", &T);

	for (int t = 1; t <= T; t++)
	{
		max = 0;
		sum = 0;

		scanf("%d %d", &N, &K);

		for (int a = 0; a < N; a++)
			scanf_s("%d", &A[a]);

		for (int b = 0; b < N; b++)
			scanf_s("%d", &B[b]);

		QuickSort(A, 0, N - 1);
		QuickSort(B, 0, N - 1);

		for (int i = 0; i < K; i++)
		{
 			sum = A[i] + B[K - 1 - i];

			if (max <= sum)
				max = sum;
		}

		printf("Case #%d\n", t);
		printf("%d\n", max);
	}

	return 0;
}

//input.txt

3
2 2
1 2
4 2
3 2
6 3 1
1 4 3
5 5
50 3 7 8 10
40 13 11 18 19
