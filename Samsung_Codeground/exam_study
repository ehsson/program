#include <stdio.h>
#include<stdlib.h>

void QuickSort(int arr[], int start, int end)
{
	if (start >= end)
		return;

	int pivot = start;
	int low = start + 1;
	int high = end;
	int temp;


	while (low <= high) {
		while (arr[low] >= arr[pivot] && low <= end)
			low++;

		while (arr[high] < arr[pivot])
			high--;

		if (low < high) {
			temp = arr[low];
			arr[low] = arr[high];
			arr[high] = temp;
		}
	}


	temp = arr[pivot];
	arr[pivot] = arr[high];
	arr[high] = temp;

	QuickSort(arr, start, high - 1);
	QuickSort(arr, high + 1, end);
}

int main(void)
{
	int T; 
	int N, K;

	scanf_s("%d", &T);

	for (int t = 1; t <= T; t++)
	{
		scanf_s("%d %d", &N, &K);

		int* arr = (int*)malloc(sizeof(int) * N);

		for (int n = 0; n < N; n++)
			scanf_s("%d", &arr[n]);

		QuickSort(arr, 0, N);

		int sum = 0;

		for (int k = 0; k < K; k++)
			sum += arr[k];

		printf("Case #%d\n%d\n", t, sum);

		free(arr);
	}

	return 0;
}

//test case

1
4 2
20 50 30 30
