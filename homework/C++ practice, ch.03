// 3-1

#include <iostream>
using namespace std;

typedef struct Point
{
	int xpos, ypos;

	void MovePos(int x, int y)
	{
		ypos += y;
		xpos += x;
	}

	void AddPoint(const Point& pos)
	{
		ypos += pos.ypos;
		xpos += pos.xpos;
	}

	void ShowPosition(void)
	{
		cout << xpos << " " << ypos << endl;
	}

} Point;

int main(void)
{
	Point pos1 = { 12, 4 };
	Point pos2 = { 20, 30 };

	pos1.MovePos(-7, 10);
	pos1.ShowPosition();

	pos1.AddPoint(pos2);
	pos1.ShowPosition();

	return 0;
}

// 3-2

#include <iostream>
using namespace std;

class Calculator
{
	int numAdd, numMin, numDiv, numMul;

public:
	void Init(void);
	double Add(double num1, double num2);
	double Min(double num1, double num2);
	double Div(double num1, double num2);
	double Mul(double num1, double num2);
	void ShowOpCount(void);
};

void Calculator::Init(void)
{
	numAdd = 0;
	numMin = 0;
	numDiv = 0;
	numMul = 0;
}

double Calculator::Add(double num1, double num2)
{
	numAdd++;
	return num1 + num2;
}

double Calculator::Min(double num1, double num2)
{
	numMin++;
	return num1 - num2;
}

double Calculator::Div(double num1, double num2)
{
	numDiv++;
	return num1 / num2;
}

double Calculator::Mul(double num1, double num2)
{
	numMul++;
	return num1 * num2;
}

void Calculator::ShowOpCount(void)
{
	cout << "num of add: " << numAdd << endl;
	cout << "num of min: " << numMin << endl;
	cout << "num of div: " << numDiv << endl;
	cout << "num of mul: " << numMul << endl;
}

int main(void)
{
	Calculator cal;
	cal.Init();
	cout << "3.2 + 2.4 = " << cal.Add(3.2, 2.4) << endl;
	cout << "3.5 + 1.7 = " << cal.Div(3.5, 1.7) << endl;
	cout << "2.2 + 1.5 = " << cal.Min(2.2, 1.5) << endl;
	cout << "4.9 + 1.2 = " << cal.Div(4.9, 1.2) << endl;
	cal.ShowOpCount();

	return 0;
}
