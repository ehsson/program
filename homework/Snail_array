#include <stdio.h>

int arr[12][12] = { 0 };

enum {
	LEFT = 0, DOWN, RIGHT, UP
};

void init(int N)
{
	for(int y = 1; y <= N; y++)
		for(int x = 1; x <= N; x++)
			arr[y][x] = 0;
	
	for(int i = 1; i <= N; i++)
		arr[i][0] = arr[i][N + 1] = arr[0][i] = arr[N + 1][i] = -1;
}

void DFS(int x, int y, int num, int direction)
{
	if(arr[y][x] != 0)
		return;
	
	arr[y][x] = num;
	
	int next_x = x;
	int next_y = y;
	
	switch(direction) {
		case LEFT:
			next_x++;
			break;
		case DOWN:
			next_y++;
			break;
		case RIGHT:
			next_x--;
			break;
		case UP:
			next_y--;
		default:
			break;
	}
	
	DFS(next_x, next_y, num + 1, direction);
	
	next_x = x;
	next_y = y;
	
	switch(direction) {
		case LEFT:
			next_y++;
			break;
		case DOWN:
			next_x--;
			break;
		case RIGHT:
			next_y--;
			break;
		case UP:
			next_x++;
			break;
		default:
			break;
	}
	
	DFS(next_x, next_y, num + 1, (direction + 1) % 4);
}

int main(void)
{
	int N;
	
	scanf("%d", &N);
	
	init(N);
	
	DFS(1, 1, 1, 0);
	
	for(int y = 1; y <= N; y++)
		for(int x= 1; x <= N; x++) {
			printf("%d", arr[y][x]);
			
			if(x < N)
				printf(" ");
			else
				printf("\n");
		}
	
	return 0;
}
