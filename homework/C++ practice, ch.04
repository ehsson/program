// 4-1

#include <iostream>
using namespace std;

class FruitSeller
{
	int APPLE_PRICE;
	int numofApples;
	int myMoney;
public:
	void InitMembers(int price, int num, int money)
	{
		APPLE_PRICE = price;
		numofApples = num;
		myMoney = money;
	}

	int SaleApples(int money)
	{
		int num = money / APPLE_PRICE;
		numofApples -= num;
		myMoney += money;
		return num;
	}

	void ShowSalesResult(void)
	{
		cout << "남은 사과: " << numofApples << endl;
		cout << "판매 수익: " << myMoney << endl;
	}
};

class FruitBuyer
{
	int myMoney;
	int numofApples;
public:
	void InitMembers(int money)
	{
		myMoney = money;
		numofApples = 0;
	}

	void BuyApples(FruitSeller& seller, int money)
	{
		if (money < 0)
		{
			cout << "양수를 입력하십시오" << endl;
			return;
		}

		numofApples += seller.SaleApples(money);
		myMoney -= money;
	}

	void ShowBuyResults(void)
	{
		cout << "현재 잔액: " << myMoney << endl;
		cout << "사과 갯수: " << numofApples << endl << endl;
	}
};

int main(void)
{
	FruitSeller seller;
	seller.InitMembers(1000, 20, 0);
	FruitBuyer buyer;
	buyer.InitMembers(5000);
	buyer.BuyApples(seller, -1);

	cout << "과일 판매자 현황" << endl;
	seller.ShowSalesResult();
	cout << "과일 구매자 현황" << endl;
	buyer.ShowBuyResults();

	return 0;
}

// 4-2, 4-3(1)

#include <iostream>
using namespace std;

class Point
{
	int xpos, ypos;
public:
	Point(int x, int y)
	{
		xpos = x;
		ypos = y;
	}

	void ShowPointInfo() const
	{
		cout << "[" << xpos << ", " << ypos << "]" << endl;
	}
};

class Circle
{
	Point p;
	int c_radius;
public:
	Circle(int x, int y, int radius) : p(x, y)
	{;
		c_radius = radius;
	}

	void ShowCircleInfo(void) const
	{
		cout << "radius: " << c_radius << endl;
		p.ShowPointInfo();
	}
};

class Ring
{
	Circle c1, c2;
public:
	Ring(int inner_x, int inner_y, int inner_radius, int outer_x, int outer_y, int outer_radius);
	void ShowRingInfo(void) const;
};

Ring::Ring(int inner_x, int inner_y, int inner_radius, int outer_x, int outer_y, int outer_radius)
	: c1(inner_x, inner_y, inner_radius), c2(outer_x, outer_y, outer_radius)
{
	
}

void Ring::ShowRingInfo(void) const
{
	cout << "Inner Circle Info..." << endl;
	c1.ShowCircleInfo();
	cout << "Outer Circle Info..." << endl;
	c2.ShowCircleInfo();
}

int main(void)
{
	Ring ring(1, 1, 4, 2, 2, 9);
	ring.ShowRingInfo();

	return 0;
}

// 4-3(2)

#include <iostream>
#include <cstring>
using namespace std;

namespace COMP_POS
{
	enum
	{
		CLERK = 0, SENIOR, ASSIST, MANAGER
	};

	void PrintPosition(int position)
	{
		switch (position)
		{
		case 0:
			cout << "직급: 사원" << endl;
			break;
		case 1:
			cout << "직급: 주임" << endl;
			break;
		case 2:
			cout << "직급: 대리" << endl;
			break;
		case 3:
			cout << "직급: 과장" << endl;
			break;
		default:
			break;
		}
	}
}

class NameCard
{
private:
	char* name;
	char* company;
	char* phone;
	int position;

public:
	NameCard(char* in_name, char* in_company, char* in_phone, int comp_pos);
	void ShowNameCardInfo(void)
	{
		cout << "이름: " << name << endl;
		cout << "회사: " << company << endl;
		cout << "전화번호: " << phone << endl;
		COMP_POS::PrintPosition(position);
	}
	~NameCard(void);
};

NameCard::NameCard(char* in_name, char* in_company, char* in_phone, int comp_pos)
{
	name = new char[strlen(in_name) + 1];
	strcpy(name, in_name);
	company = new char[strlen(in_company) + 1];
	strcpy(company, in_company);
	phone = new char[strlen(in_phone) + 1];
	strcpy(phone, in_phone);
	position = comp_pos;
}

NameCard::~NameCard(void)
{
	delete[]name;
	delete[]company;
	delete[]phone;
}

int main(void)
{
	NameCard manCLERK("Lee", "ABCEng", "010-1111-2222", COMP_POS::CLERK);
	NameCard manSENIOR("Hong", "OrangeEng", "010-3333-4444", COMP_POS::SENIOR);
	NameCard manASSIST("Kim", "SoGoodComp", "010-5555-6666", COMP_POS::ASSIST);
	manCLERK.ShowNameCardInfo();
	manSENIOR.ShowNameCardInfo();
	manASSIST.ShowNameCardInfo();

	return 0;
}
