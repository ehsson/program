#include <iostream>
#include <vector>
#include <stack>
#include <algorithm>
using namespace std;

int N;

int arr[500001];
int idx[500001];
bool chk[500001];
vector<int> v;

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	cin >> N;

	int cnt = 0;

	for (int i = 1; i <= N; i++) {
		int a, b;
		cin >> a >> b;
		arr[a] = b;
		cnt = max(cnt, max(a, b));
	}

	int len = 0;
	v.push_back(0);

	for (int i = 1; i <= cnt; i++) {
		if (arr[i] > v[len]) {
			v.push_back(arr[i]);
			len++;
			idx[i] = len;
		}
		else {
			vector<int>::iterator low = lower_bound(v.begin(), v.end(), arr[i]);
			*low = arr[i];
			idx[i] = low - v.begin();
		}
	}

	cout << N - (v.size() - 1) << "\n";
	int temp = v.size() - 1;

	for (int i = cnt; i >= 1 || temp > 0; i--) {
		if (temp == idx[i]) {
			chk[i] = true;
			temp--;
			continue;
		}

		if (arr[i] == 0)
			chk[i] = true;
	}

	for (int i = 1; i <= cnt; i++)
		if (!chk[i])
			cout << i << "\n";

	return 0;
}
