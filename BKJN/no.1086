#include <iostream>
#include <string>
using namespace std;

int N, K;
string num[16];
int len[16];
int dp[32767][101];

long long GCD(long long a, long long b)
{
	long long gcd = 0;

	return gcd;
}

int get_div(string s)
{
	int div = 0, len = s.size(), idx = 0;

	if (len <= 9)
		div = stoi(s) % K;
	else {
		while (idx < len) {
			int number = div * 10 + (s[idx] - '0');

			if (number < K)
				div = number;
			else
				div = number % K;

			idx++;
		}
	}

	return div;
}

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	cin >> N;
	cin >> K;

	for (int n = 1; n <= N; n++) { // 0000001, 0000010, 0000100, 0001000 ... 순으로
		string s;
		cin >> s;
		num[n] = s;

		len[n] = s.size();

		int bit = 1, div = get_div(s);;
		bit = bit << (n - 1);
		dp[bit][div] = 1;
	}

	long long cnt = 0;





	long long fac = 1;
	for (int i = 2; i <= N; i++)
		fac *= i;

	int gcd = GCD(cnt, fac);

	cout << cnt / gcd << "/" << fac / gcd << "\n";

	return 0;
}
