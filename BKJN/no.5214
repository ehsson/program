// memory limit code

#include <iostream>
#include <vector>
#include <queue>
#include <set>
using namespace std;

vector<int> v[100001];
bool visit[100001];
int input[1000];
set<int> s[100001];

int N, K, M;
int answer = -1;

void BFS()
{
	queue<pair<int, int>> q;
	q.push({ 1, 1 });
	visit[1] = true;

	while (!q.empty()) {
		int cur = q.front().first;
		int cnt = q.front().second;
		q.pop();

		if (cur == N) {
			answer = cnt;
			return;
		}

		for (int i = 0; i < v[cur].size(); i++) {
			int next = v[cur][i];

			if (!visit[next]) {
				q.push({ next, cnt + 1 });
				visit[next] = true;
			}
		}
	}
}

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	cin >> N >> K >> M;

	for (int m = 0; m < M; m++) {
		for (int k = 0; k < K; k++) {
			cin >> input[k];

			for (int i = 0; i < k; i++) {
				if (s[input[k]].find(input[i]) == s[input[k]].end()) {
					v[input[k]].push_back(input[i]);
					v[input[i]].push_back(input[k]);

					s[input[k]].insert(input[i]);
					s[input[i]].insert(input[k]);
				}
			}
		}
	}

	BFS();

	cout << answer << "\n";

	return 0;
}
