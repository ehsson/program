#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int N;
int arr[1000001];
int idx[1000001];
vector<int> v;
vector<int> ans;

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	cin >> N;
	v.push_back(-1000000001);
	int len = 0;

	for (int i = 1; i <= N; i++) {
		int val;
		cin >> val;
		arr[i] = val;

		if (val > v[len]) {
			v.push_back(val);
			len++;
			idx[i] = len;
		}
		else {
			vector<int>::iterator low = lower_bound(v.begin(), v.end(), arr[i]);
			*low = arr[i];
			idx[i] = low - v.begin();
		}
	}

	int temp = v.size() - 1;
	cout << temp << "\n";

	for (int i = N; i >= 1; i--) {
		if (temp == 0)
			break;

		if (temp == idx[i]) {
			ans.push_back(arr[i]);
			temp--;
		}
	}

	sort(ans.begin(), ans.end());

	for (int i = 0; i < ans.size(); i++)
		cout << ans[i] << " ";

	return 0;
}
