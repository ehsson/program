#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int N, C, M;
vector<pair<pair<int, int>, int>> v;
int truck[2001];

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	cin >> N >> C;

	cin >> M;

	for (int m = 0; m < M; m++) {
		int start, end, box;
		cin >> start >> end >> box;

		v.push_back({ {end, start}, box });
	}

	sort(v.begin(), v.end());

	int cnt = 0;

	for (int i = 0; i < v.size(); i++) {
		int start = v[i].first.second;
		int end = v[i].first.first;
		int box = v[i].second;

		int total = 0;
		for (int j = start; j < end; j++)
			total = max(total, truck[j]);

		int add = min(box, C - total);
		cnt += add;

		for (int j = start; j < end; j++)
			truck[j] += add;
	}

	cout << cnt << "\n";

	return 0;
}
