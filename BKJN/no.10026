#include <iostream>
#include <cstring>
#include <queue>
using namespace std;

char arr[100][100];
bool visit[100][100];
int dy[4] = { 0, 1, 0, -1 };
int dx[4] = { 1, 0, -1, 0 };
int N;

void BFS(int i, int j)
{
	queue<pair<int, int>> q;
	q.push(make_pair(i, j));
	visit[i][j] = true;

	while (!q.empty()) {
		int y = q.front().first;
		int x = q.front().second;
		q.pop();

		for (int i = 0; i < 4; i++) {
			int ny = y + dy[i];
			int nx = x + dx[i];

			if (ny >= 0 && ny < N && nx >= 0 && nx < N) {
				if (arr[y][x] == arr[ny][nx] && !visit[ny][nx]) {
					visit[ny][nx] = true;
					q.push(make_pair(ny, nx));
				}
			}
		}
	}
}

int main(void)
{
	FILE* pf;
	freopen_s(&pf, "input.txt", "r", stdin);
	cin >> N;

	for (int y = 0; y < N; y++)
		for (int x = 0; x < N; x++)
			cin >> arr[y][x];

	int RGBcnt = 0;

	for(int y = 0; y < N; y++)
		for (int x = 0; x < N; x++) {
			if (!visit[y][x]) {
				RGBcnt++;
				BFS(y, x);
			}
		}

	for (int y = 0; y < N; y++)
		for (int x = 0; x < N; x++)
			if (arr[y][x] == 'G')
				arr[y][x] = 'R';

	int Bcnt = 0;
	memset(visit, false, sizeof(visit));

	for (int y = 0; y < N; y++)
		for (int x = 0; x < N; x++) {
			if (!visit[y][x]) {
				Bcnt++;
				BFS(y, x);
			}
		}

	cout << RGBcnt << " " << Bcnt << "\n";

	return 0;
}
