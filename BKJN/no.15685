#include <iostream>
#include <cstring>
#include <cmath>
using namespace std;

bool map[101][101];
int direction[1024];
int dx[4] = { 1, 0, -1, 0 };
int dy[4] = { 0, -1, 0, 1 };

void graph(int x, int y, int g)
{
	int nx = x, ny = y;

	for (int i = 0; i < pow(2, g); i++) {
		ny += dy[direction[i]];
		nx += dx[direction[i]];
		map[ny][nx] = true;
	}
}

int get_cnt()
{
	int cnt = 0;

	for (int y = 0; y < 100; y++)
		for (int x = 0; x < 100; x++)
			if (map[y][x] && map[y + 1][x] && map[y][x + 1] && map[y + 1][x + 1])
				cnt++;

	return cnt;
}

int main(void)
{
	FILE* pf;
	freopen_s(&pf, "input.txt", "r", stdin);
	int N;
	int x, y, d, g;
	cin >> N;

	for (int n = 0; n < N; n++) {
		cin >> x >> y >> d >> g;
		map[y][x] = true;
		memset(direction, 0, sizeof(direction));
		direction[0] = d;
		for (int i = 1; i <= g; i++)
			for (int j = 1; j <= pow(2, i - 1); j++)
				direction[(int)pow(2, i) - j] = (direction[j - 1] + 1) % 4;

		graph(x, y, g);
	}

	cout << get_cnt();

	return 0;
}
