#include <iostream>
#include <queue>
#include <cstring>
using namespace std;

#define MAX 500000

int N, K;

int visit[2][500001];

queue<pair<int, int>> q;

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	cin >> N >> K;

	memset(visit, -1, sizeof(visit));

	q.push({ N, 0 });

	while(!q.empty()) {
		int cur = q.front().first;
		int cnt = q.front().second;
		q.pop();

		if (cur > MAX || cur < 0 || visit[cnt % 2][cur] != -1)
			continue;

		visit[cnt % 2][cur] = cnt;

		q.push({ cur + 1, cnt + 1 });
		q.push({ cur - 1, cnt + 1 });
		q.push({ cur * 2, cnt + 1 });
	}

	int answer = -1;

	for (int i = 0; i <= MAX; i++) {
		int sum = i * (i + 1) / 2;

		if (K + sum > MAX)
			break;

		if (visit[i % 2][K + sum] != -1 && visit[i % 2][K + sum] <= i) {
			answer = i;
			break;
		}
	}

	cout << answer << "\n";

	return 0;
}
