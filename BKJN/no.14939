#include <iostream>
#include <string>
using namespace std;

int bulb[10][10];
int dy[5] = { 0, 1, 0, -1, 0 };
int dx[5] = { 0, 0, 1, 0, -1 };

bool isin(int y, int x)
{
	if (y >= 0 && y < 10 && x >= 0 && x < 10)
		return true;
	else
		return false;
}

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);

	for (int i = 0; i < 10; i++) {
		string s;
		cin >> s;
		
		for (int j = 0; j < 10; j++)
			if (s[j] == 'O')
				bulb[i][j] = 1;
	}

	int answer = 101;

	for (int i = 0; i < (1 << 10); i++) {
		int temp[10][10];					// 원래 map 복사

		for (int y = 0; y < 10; y++)
			for (int x = 0; x < 10; x++)
				temp[y][x] = bulb[y][x];
		
		int cnt = 0;

		for (int x = 0; x < 10; x++) {	// 첫째줄 불 켜기/끄기
			if (i & (1 << (9 - x))) {
				cnt++;

				for (int k = 0; k < 5; k++) {
					int ny = 0 + dy[k];
					int nx = x + dx[k];

					if (isin(ny, nx))
						temp[ny][nx] = (int)(!temp[ny][nx]);
				}
			}
		}

		for (int j = 1; j < 10; j++) {
			for (int k = 0; k < 10; k++) {
				if (temp[j - 1][k]) {		// 윗칸의 불이 켜져 있으면 불 끄기
					cnt++;
					for (int m = 0; m < 5; m++) {
						int ny = j + dy[m];
						int nx = k + dx[m];

						if (isin(ny, nx))
							temp[ny][nx] = (int)(!temp[ny][nx]);
					}
				}
			}
		}

		for (int j = 0; j < 10; j++)
			if (temp[9][j]) {
				cnt = -1;
				break;
			}

		if(cnt != -1)
			answer = min(answer, cnt);
	}

	if (answer == 101)
		cout << "-1\n";
	else
		cout << answer << "\n";

	return 0;
}
