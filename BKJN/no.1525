#include <iostream>
#include <queue>
#include <map>
#include <string>
using namespace std;

int dy[4] = { 1, 0, -1, 0 };
int dx[4] = { 0, 1, 0, -1 };

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int tempStart = 0;

	for (int y = 0; y < 3; y++) {
		for (int x = 0; x < 3; x++) {
			int input;
			cin >> input;

			if (input == 0)
				tempStart = tempStart * 10 + 9;
			else
				tempStart = tempStart * 10 + input;
		}
	}

	string start = to_string(tempStart);
	queue<string> q;
	map<string, int> visit;
	q.push(start);
	visit.insert({start, 0});

	while (!q.empty()) {
		string cur = q.front();
		q.pop();

		if (cur == "123456789")
			break;

		int temp = cur.find('9');

		int y = temp / 3;
		int x = temp % 3;

		for (int i = 0; i < 4; i++) {
			int ny = y + dy[i];
			int nx = x + dx[i];

			if (ny >= 0 && ny < 3 && nx >= 0 && nx < 3) {
				string next = cur;
				swap(next[y * 3 + x], next[ny * 3 + nx]);

				if (!visit.count(next)) {
					q.push(next);
					visit[next] = visit[cur] + 1;
				}
			}
		}
	}

	if (!visit.count("123456789"))
		cout << "-1\n";
	else
		cout << visit["123456789"] << "\n";

	return 0;
}
