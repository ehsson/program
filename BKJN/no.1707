#include <iostream>
#include <vector>
#include <queue>
#include <cstring>
using namespace std;

vector<int> v[20001];
int visit[20001];

bool BFS(int start)
{
	queue<int> q;
	q.push(start);
	visit[start] = 1;

	while (!q.empty()) {
		int i = q.front();
		q.pop();

		for (int j = 0; j < v[i].size(); j++) {
			int ni = v[i][j];

			if (!visit[ni]) {
				if (visit[i] == 1)
					visit[ni] = -1;
				else if (visit[i] == -1)
					visit[ni] = 1;
				q.push(ni);
			}
			else if (visit[ni] && visit[ni] == visit[i]) 
				return false;
		}
	}

	return true;
}

int main(void)
{
	FILE* pf;
	freopen_s(&pf, "input.txt", "r", stdin);
	int T;
	cin >> T;

	for (int t = 1; t <= T; t++) {
		int V, E;
		cin >> V >> E;

		for (int i = 0; i < E; i++) {
			int a, b;
			cin >> a >> b;

			v[a].push_back(b);
			v[b].push_back(a);
		}

		int j;

		for (j = 1; j <= V; j++) {
			if (!visit[j])
				if (!BFS(j)) {
					cout << "NO\n";
					break;
				}
		}

		if (j == V + 1)
			cout << "YES\n";

		memset(visit, 0, sizeof(visit));

		for (int i = 1; i <= V; i++)
			v[i].clear();
	}
	return 0;
}
