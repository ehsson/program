#include <iostream>
#include <cstring>
#include <string>
using namespace std;

string T, P;
int fail[1000000];
int result[1000000];

int cnt;

void Fail_Function()
{
	int j = 0;

	for (int i = 1; i < P.size(); i++) {
		while (j > 0 && P[i] != P[j])
			j = fail[j - 1];

		if (P[i] == P[j])
			fail[i] = ++j;
	}
}

void KMP()
{
	int j = 0;

	for (int i = 0; i < T.size(); i++) {
		while (j > 0 && T[i] != P[j])
			j = fail[j - 1];

		if (T[i] == P[j]) {
			if (j == P.size() - 1) {
				result[cnt++] = i - P.size() + 2;
				j = fail[j];
			}
			else
				j++;
		}
	}
}

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	getline(cin, T);
	getline(cin, P);

	Fail_Function();
	KMP();

	cout << cnt << "\n";
	
	for (int i = 0; i < cnt; i++)
		cout << result[i] << " ";

	return 0;
}
