#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int A[4000];
int B[4000];
int C[4000];
int D[4000];
vector<int> v1;
vector<int> v2;

int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	int N;
	cin >> N;

	for (int n = 0; n < N; n++)
		cin >> A[n] >> B[n] >> C[n] >> D[n];

	for (int i = 0; i < N; i++)
		for (int j = 0; j < N; j++) {
			v1.push_back(A[i] + B[j]);
			v2.push_back(C[i] + D[j]);
		}

	sort(v1.begin(), v1.end());
	sort(v2.begin(), v2.end());

	long long answer = 0;

	for (int i = 0; i < v1.size(); i++) {
		int temp = v1[i];

		int low = lower_bound(v2.begin(), v2.end(), -temp) - v2.begin();
		int high = upper_bound(v2.begin(), v2.end(), -temp) - v2.begin();

		answer += (high - low);
	}

	cout << answer << "\n";

	return 0;
}
