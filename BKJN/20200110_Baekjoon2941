//크로아티아 알파벳 문제 : https://www.acmicpc.net/problem/2941

// 아빠 솔루션

#include <stdio.h>
#include <string.h>

#define CMP_WORD_CNT	8

int main() {

	char arr[101] = { 0 };
	int arr_len = 0;
	int cnt = 0;
	char temp;

	char cmp_word[][CMP_WORD_CNT] = { "dz=", "c=", "c-", "d-", "lj", "nj", "s=", "z=" };
	int cmp_word_len = 0;

	scanf("%s", arr, 100);

	arr_len = strlen(arr);

	for (int i = 0; i < CMP_WORD_CNT; i++) {
		cmp_word_len = strlen(cmp_word[i]);

		for (int k = 0; k < arr_len - cmp_word_len + 1; k++) {
			temp = arr[k + cmp_word_len];
			arr[k + cmp_word_len] = 0;

			if (!strcmp(&arr[k], cmp_word[i])) {
				cnt++;
				for (int m = k; m < k + cmp_word_len; m++) {
					arr[m] = 0;
				}
			}

			arr[k + cmp_word_len] = temp;
		}
	}

	for (int i = 0; i < arr_len; i++)
		if (arr[i] != 0) cnt++;

	printf("%d\n", cnt);

	return 0;
}


/*
// 현수 솔루션
#include <stdio.h>

int main(void)
{
	char arr[101] = { 0 };
	int i = 0, cnt = 0;
	
	scanf("%s", arr);
	
	while(arr[i] != 0) {
		switch (arr[i]) {
			case 'c':
				if(arr[i + 1] == '=' || arr[i + 1] == '-') {
					cnt++;
					i++;
				}
				else
					cnt++;
				
				i++;
				break;
			case 'd':
				if(arr[i + 1] == 'z' || arr[i + 1] == '-') {
					if(arr[i + 1] == 'z' && arr[i + 2] == '=') {
						i += 2;
						cnt++;
					}
					else if(arr[i + 1] == '-') {
						i++;
						cnt++;
					}
					else 
						cnt++;
				}
				else
					cnt++;
				
				i++;
				break;	
			case 'l':
				if(arr[i + 1] == 'j') {
					cnt++;
					i++;
				}
				else
					cnt++;
				
				i++;
				break;	
			case 'n':
				if(arr[i + 1] == 'j') {
					cnt++;
					i++;
				}
				else
					cnt++;
				
				i++;
				break;	
			case 's':
				if(arr[i + 1] == '=') {
					cnt++;
					i++;
				}
				else
					cnt++;
				
				i++;
				break;
			case 'z':
				if(arr[i + 1] == '=') {
					cnt++;
					i++;
				}
				else
					cnt++;
				
				i++;
				break;
			default:
				cnt++;
				i++;
				break;
		}		
	}
	
	printf("%d\n", cnt);
	
	return 0;
}
*/
