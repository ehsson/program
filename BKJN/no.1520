#include <iostream>
#include <queue>
using namespace std;

int map[500][500];
int dp[500][500];
int dy[4] = { 0, 1, 0, -1 };
int dx[4] = { 1, 0, -1, 0 };

int N, M;

int DFS(int y, int x)
{
	if (y == N - 1 && x == M - 1)
		return 1;
	else if(dp[y][x] == -1) {
		dp[y][x] = 0;

		for (int i = 0; i < 4; i++) {
			int ny = y + dy[i];
			int nx = x + dx[i];

			if (ny >= 0 && ny < N && nx >= 0 && nx < M && map[y][x] > map[ny][nx])
				dp[y][x] += DFS(ny, nx);
		}
	}

	return dp[y][x];
}

int main(void)
{
	FILE* pf;
	freopen_s(&pf, "input.txt", "r", stdin);
	cin >> N >> M;

	for (int n = 0; n < N; n++)
		for (int m = 0; m < M; m++) {
			cin >> map[n][m];
			dp[n][m] = -1;
		}

	cout << DFS(0, 0) << "\n";

	return 0;
}
